Prolog 3.Tag/21.09.2016	15:00 - Computer

Abstraktion erleichtert die Sicht auf sehr komplexe Themen

Beispiel Handy

Wir konzentrieren uns auf das Wesentliche, lassen Details weg.
Das erlaubt uns, effizient zu sein, den Überblick zu behalten.

Alle Details irrelevant, bei Signal Abtastpunkte setzen
Je weniger Abtastpunkte, desto weniger Speicherplatz wird verbraucht
--> es gibt jedoch unendliche viele Möglichkeiten, ein abgetastetes Signal falsch
zu rekonstruieren! Ergo nur eine richtige Möglichkeit

Fourieranalyse: Signal als Summe von Sinussignalen darstellen.
Wir legen höchste relevante Frequenz fest --> Der Bereich darüber kann weggeschnitten werden,
verkleinert den Bereich

Verschiedene Abtastraten

Ton Spielzeit 4:25 in unkomprimierter Form
--> Abtastung mit 44100 Hz: 41 MB
		  22050
		  immer weniger ...
Bis wohin ist kein Qualitätsverlust merkbar?

Computerchip = Silizium

Transistoren auf einem Chip sind bspw. 14 nm groß, das ist 500x größer als ein rotes Blutkörperchen

Die Frequenz eines Ringoszillators ist frequenzabhängig --> Star Wars-Beispiel
Gatterlaufzeit = temperaturabhängig
Eine konstante Taktperiode ist also wieder eine Abstraktion

Signallaufzeiten am Chip sind (Hardware generell ist) abhängig von Temperatur und Spannung
Ein Programmierer will sich darum nicht kümmern müssen!
Diese Abhängigkeiten werden verborgen: Wir wählen ein konstante Taktperiode, die größer ist als die Laufzeit unter den schlechtesten Bedingungen


Wieso ist ein Prozessor nicht einfach unendlich schnell?

Grenze 1: Lichtgeschwindigkeit
Bei 30 Ghz = 30*10^9 Taktperioden pro Sekunde heißt ergo 1 Taktperiode = nur 1 cm!

Grenze 2: Lade-/Entladevorgänge
Transistoren etc.

Lösung 1: Multi-Core und vernetzte Rechner
4-16 Prozessoren (Cores) verbaut in einem Chip. Tendenz steigend
Moderne Grafikkarten: über 1000 Cores
Parallele Programme erfordern jedoch neue Programmiertechniken!

Lösung 2: Spezialisiertes Design
Bisher betrachtet wurden "general purpose" Prozessoren für verschiedenste Tätigkeiten
Programmierbarkeit und Vielseitigkeit kosten Effizienz
Höherer Entwicklungsaufwand!
